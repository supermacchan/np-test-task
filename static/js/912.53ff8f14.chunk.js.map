{"version":3,"file":"static/js/912.53ff8f14.chunk.js","mappings":"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","sources":["webpack://np-test-task/./src/components/ShippingSearchForm/ShippingSearchForm.module.css?beae","components/ShippingSearchForm/ShippingSearchForm.jsx","webpack://np-test-task/./src/components/ShippingInfo/ShippingInfo.module.css?200e","components/ShippingInfo/ShippingInfo.jsx","webpack://np-test-task/./src/components/SearchHistory/SearchHistory.module.css?30dc","components/SearchHistory/SearchHistory.jsx","webpack://np-test-task/./src/pages/LocateShipping/LocateShipping.module.css?8ba9","pages/LocateShipping/LocateShipping.jsx","redux/selectors.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ShippingSearchForm_form__47Cbp\",\"input\":\"ShippingSearchForm_input__xjGb0\",\"button\":\"ShippingSearchForm_button__rahG4\",\"formD\":\"ShippingSearchForm_formD__iXIrn\",\"buttonD\":\"ShippingSearchForm_buttonD__nv-Qr\",\"formT\":\"ShippingSearchForm_formT__y4NmH\",\"buttonT\":\"ShippingSearchForm_buttonT__G6hHt\",\"formM\":\"ShippingSearchForm_formM__1YSF+\",\"buttonM\":\"ShippingSearchForm_buttonM__duBjd\"};","import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectShipping } from \"redux/selectors\";\nimport { fetchShipping } from \"redux/operations\";\nimport { addNewQuery } from \"../../redux/historySlice\";\nimport { Desktop, Tablet, Mobile } from \"utils/screens\";\nimport css from './ShippingSearchForm.module.css';\n\nexport const ShippingSearchForm = () => {\n    const [trackingNum, setTrackingNum] = useState(\"\");\n    const { info: { number } } = useSelector(selectShipping);\n    const dispatch = useDispatch();\n\n    // the input shows the query\n    useEffect(() => {\n        if (!number) {\n            return;\n        }\n        \n        setTrackingNum(number);\n    }, [number])\n\n    // controlled input\n    const handleInputChange = event => {\n        const { value } = event.currentTarget;\n        setTrackingNum(value);\n    };\n\n    const handleFormSubmit = event => {\n        event.preventDefault();\n        // fetch shipping info\n        dispatch(fetchShipping(trackingNum));\n        // add query to history\n        dispatch(addNewQuery(trackingNum));\n    }\n\n    return (\n        <>\n            <Desktop>\n                <form className={`${css.form} ${css.formD}`} onSubmit={handleFormSubmit}>\n                    <input\n                        type=\"text\"\n                        name=\"query\"\n                        pattern=\"^(5|2)([0-9]{13})$\"\n                        required\n                        title=\"Номер відправлення має складатися з 14 цифр та починатися з 2 або 5\"\n                        placeholder=\"Введіть номер ТТН\"\n                        className={css.input}\n                        onChange={handleInputChange}\n                        value={trackingNum}\n                    />\n                    <button \n                        type=\"submit\"\n                        className={`${css.button} ${css.buttonD}`}\n                    >\n                        Перевірити статус\n                    </button>\n                </form>\n            </Desktop>\n\n            <Tablet>\n                <form className={`${css.form} ${css.formT}`} onSubmit={handleFormSubmit}>\n                    <input\n                        type=\"text\"\n                        name=\"query\"\n                        pattern=\"^(5|2)([0-9]{13})$\"\n                        required\n                        title=\"Номер відправлення має складатися з 14 цифр та починатися з 2 або 5\"\n                        placeholder=\"Введіть номер ТТН\"\n                        className={css.input}\n                        onChange={handleInputChange}\n                        value={trackingNum}\n                    />\n                    <button \n                        type=\"submit\"\n                        className={`${css.button} ${css.buttonT}`}\n                    >\n                        Перевірити статус\n                    </button>\n                </form>\n            </Tablet>\n\n            <Mobile>\n                <form className={`${css.form} ${css.formM}`} onSubmit={handleFormSubmit}>\n                    <input\n                        type=\"text\"\n                        name=\"query\"\n                        pattern=\"^(5|2)([0-9]{13})$\"\n                        required\n                        title=\"Номер відправлення має складатися з 14 цифр та починатися з 2 або 5\"\n                        placeholder=\"Введіть номер ТТН\"\n                        className={css.input}\n                        onChange={handleInputChange}\n                        value={trackingNum}\n                    />\n                    <button \n                        type=\"submit\"\n                        className={`${css.button} ${css.buttonM}`}\n                    >\n                        Перевірити статус\n                    </button>\n                </form>\n            </Mobile>\n        </>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"status\":\"ShippingInfo_status__Iye4f\",\"details\":\"ShippingInfo_details__fE8ST\",\"error\":\"ShippingInfo_error__8QZtx\",\"emptyInfoD\":\"ShippingInfo_emptyInfoD__8hOip\",\"infoD\":\"ShippingInfo_infoD__EuFfG\",\"statusD\":\"ShippingInfo_statusD__R1Ivd\",\"detailsD\":\"ShippingInfo_detailsD__P+d+t\",\"errorD\":\"ShippingInfo_errorD__4rNi3\",\"emptyInfoT\":\"ShippingInfo_emptyInfoT__NXSzQ\",\"infoT\":\"ShippingInfo_infoT__dH0Y9\",\"statusT\":\"ShippingInfo_statusT__cenoy\",\"detailsT\":\"ShippingInfo_detailsT__OiHGS\",\"errorT\":\"ShippingInfo_errorT__d6z0V\",\"emptyInfoM\":\"ShippingInfo_emptyInfoM__8k4jq\",\"infoM\":\"ShippingInfo_infoM__zHgfx\",\"statusM\":\"ShippingInfo_statusM__c3EHE\",\"detailsM\":\"ShippingInfo_detailsM__VbxXU\",\"errorM\":\"ShippingInfo_errorM__gCGOR\"};","import { useSelector } from 'react-redux';\nimport { selectShipping } from 'redux/selectors';\nimport { Loader } from 'components/Loader/Loader';\nimport { Desktop, Tablet, Mobile } from \"utils/screens\";\nimport css from './ShippingInfo.module.css';\n\nexport const ShippingInfo = () => {\n    const { isLoading, error, info: { status, sender, recipient } } = useSelector(selectShipping);\n\n    return (\n        <>\n            <Desktop>\n                { !status && \n                    <div className={css.emptyInfoD}>\n                        { isLoading && <Loader /> }\n                        { error &&\n                            <h2 className={`${css.error} ${css.errorD}`}>{error}</h2>\n                        }\n                    </div> \n                }\n\n                { status && \n                    <div className={css.infoD}>\n                        <h2 className={`${css.status} ${css.statusD}`}>Статус доставки: {status}</h2>\n                        <p className={`${css.details} ${css.detailsD}`}>Відправлено: {sender}</p>\n                        <p className={`${css.details} ${css.detailsD}`}>Отримано: {recipient}</p>\n                    </div>         \n                }\n            </Desktop>\n                \n            <Tablet>\n                { !status && \n                    <div className={css.emptyInfoT}>\n                        { isLoading && <Loader /> }\n                        { error &&\n                            <h2 className={`${css.error} ${css.errorT}`}>{error}</h2>\n                        }\n                    </div> \n                }\n\n                { status && \n                    <div className={css.infoT}>\n                        <h2 className={`${css.status} ${css.statusT}`}>Статус доставки: {status}</h2>\n                        <p className={`${css.details} ${css.detailsT}`}>Відправлено: {sender}</p>\n                        <p className={`${css.details} ${css.detailsT}`}>Отримано: {recipient}</p>\n                    </div>         \n                }\n            </Tablet>\n\n            <Mobile>\n                { !status && \n                    <div className={css.emptyInfoM}>\n                        { isLoading && <Loader /> }\n                        { error &&\n                            <h2 className={`${css.error} ${css.errorM}`}>{error}</h2>\n                        }\n                    </div> \n                }\n\n                { status && \n                    <div className={css.infoM}>\n                        <h2 className={`${css.status} ${css.statusM}`}>Статус доставки: {status}</h2>\n                        <p className={`${css.details} ${css.detailsM}`}>Відправлено: {sender}</p>\n                        <p className={`${css.details} ${css.detailsM}`}>Отримано: {recipient}</p>\n                    </div>         \n                }\n            </Mobile>\n        </>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"SearchHistory_list__RS-Ag\",\"title\":\"SearchHistory_title__xaLsh\",\"item\":\"SearchHistory_item__l+CPk\",\"button\":\"SearchHistory_button__uz-oe\",\"historyD\":\"SearchHistory_historyD__SvJRv\",\"titleD\":\"SearchHistory_titleD__GJRcT\",\"itemD\":\"SearchHistory_itemD__Kokm+\",\"historyT\":\"SearchHistory_historyT__qHKK+\",\"titleT\":\"SearchHistory_titleT__JMhXN\",\"itemT\":\"SearchHistory_itemT__1foJ3\",\"historyM\":\"SearchHistory_historyM__tLFDE\",\"titleM\":\"SearchHistory_titleM__gDZsn\",\"listM\":\"SearchHistory_listM__m6vSX\",\"itemM\":\"SearchHistory_itemM__wkcR-\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { selectHistory } from 'redux/selectors';\nimport { fetchShipping } from \"redux/operations\";\nimport { clearHistory } from 'redux/historySlice';\nimport { Desktop, Tablet, Mobile } from \"utils/screens\";\nimport { nanoid } from 'nanoid';\nimport css from './SearchHistory.module.css';\n\nexport const SearchHistory = () => {\n    const history = useSelector(selectHistory);\n    const dispatch = useDispatch();\n\n    const handleItemClick = (event) => {\n        dispatch(fetchShipping(event.target.innerText));\n    }\n\n    const handleClearHistory = () => {\n        dispatch(clearHistory());\n    }\n\n    return (\n        <>\n            <Desktop>\n                <div className={css.historyD}>\n                    <h2 className={`${css.title} ${css.titleD}`}>Історія</h2>\n                    <ul className={css.list}>\n                        { history.length > 0 && \n                            history.map(item => \n                                <li \n                                    className={`${css.item} ${css.itemD}`} \n                                    key={nanoid()}\n                                    onClick={handleItemClick}\n                                >\n                                    {item}\n                                </li>)\n                        }\n                    </ul>\n                    { history.length > 0 &&\n                        <button \n                            type='button'\n                            className={css.button}\n                            onClick={handleClearHistory}\n                        >\n                            Видалити всі\n                        </button>\n                    }\n                </div>\n            </Desktop>\n\n            <Tablet>\n                <div className={css.historyT}>\n                    <h2 className={`${css.title} ${css.titleT}`}>Історія</h2>\n                    <ul className={css.list}>\n                        { history.length > 0 && \n                            history.map(item => \n                                <li \n                                    className={`${css.item} ${css.itemT}`} \n                                    key={nanoid()}\n                                    onClick={handleItemClick}\n                                >\n                                    {item}\n                                </li>)\n                        }\n                    </ul>\n                    { history.length > 0 &&\n                        <button \n                            type='button'\n                            className={css.button}\n                            onClick={handleClearHistory}\n                        >\n                            Видалити всі\n                        </button>\n                    }\n                </div>\n            </Tablet>\n\n            <Mobile>\n                <div className={css.historyM}>\n                    <h2 className={`${css.title} ${css.titleM}`}>Історія</h2>\n                    <ul className={`${css.list} ${css.listM}`}>\n                        { history.length > 0 && \n                            history.map(item => \n                                <li \n                                    className={`${css.item} ${css.itemM}`} \n                                    key={nanoid()}\n                                    onClick={handleItemClick}\n                                >\n                                    {item}\n                                </li>)\n                        }\n                    </ul>\n                    { history.length > 0 &&\n                        <button \n                            type='button'\n                            className={css.button}\n                            onClick={handleClearHistory}\n                        >\n                            Видалити всі\n                        </button>\n                    }\n                </div>\n            </Mobile>\n        </>  \n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"contentD\":\"LocateShipping_contentD__+JBjQ\",\"contentT\":\"LocateShipping_contentT__+fSJs\",\"contentM\":\"LocateShipping_contentM__pC8Pr\"};","import { ShippingSearchForm } from \"components/ShippingSearchForm/ShippingSearchForm\";\nimport { ShippingInfo } from \"components/ShippingInfo/ShippingInfo\";\nimport { SearchHistory } from \"components/SearchHistory/SearchHistory\";\nimport { Desktop, Tablet, Mobile } from \"utils/screens\";\nimport css from \"./LocateShipping.module.css\";\n\nconst LocateShipping = () => {\n    return (\n        <section>\n            <ShippingSearchForm />\n\n            <Desktop>\n                <div className={css.contentD}>\n                    <ShippingInfo />\n                    <SearchHistory />\n                </div>\n            </Desktop>\n\n            <Tablet>\n                <div className={css.contentT}>\n                    <ShippingInfo />\n                    <SearchHistory />\n                </div>\n            </Tablet>\n            \n            <Mobile>\n                <div className={css.contentM}>\n                    <ShippingInfo />\n                    <SearchHistory />\n                </div>\n            </Mobile>\n        </section>\n    )\n}\n\nexport default LocateShipping;","export const selectShipping = state => state.shipping;\nexport const selectHistory = state => state.history;\nexport const selectOffices = state => state.offices;","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["ShippingSearchForm","_useState","useState","_useState2","_slicedToArray","trackingNum","setTrackingNum","number","useSelector","selectShipping","info","dispatch","useDispatch","useEffect","handleInputChange","event","value","currentTarget","handleFormSubmit","preventDefault","fetchShipping","addNewQuery","_jsxs","_Fragment","children","_jsx","Desktop","className","concat","css","onSubmit","type","name","pattern","required","title","placeholder","onChange","Tablet","Mobile","ShippingInfo","_useSelector","isLoading","error","_useSelector$info","status","sender","recipient","Loader","SearchHistory","history","selectHistory","handleItemClick","target","innerText","handleClearHistory","clearHistory","length","map","item","onClick","nanoid","state","shipping","selectOffices","offices","size","arguments","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase"],"sourceRoot":""}