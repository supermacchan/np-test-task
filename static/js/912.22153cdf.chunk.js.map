{"version":3,"file":"static/js/912.22153cdf.chunk.js","mappings":"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","sources":["webpack://np-test-task/./src/components/ShippingSearchForm/ShippingSearchForm.module.css?beae","components/ShippingSearchForm/ShippingSearchForm.jsx","webpack://np-test-task/./src/components/ShippingInfo/ShippingInfo.module.css?200e","components/ShippingInfo/ShippingInfo.jsx","webpack://np-test-task/./src/components/SearchHistory/SearchHistory.module.css?30dc","components/SearchHistory/SearchHistory.jsx","webpack://np-test-task/./src/pages/LocateShipping/LocateShipping.module.css?8ba9","pages/LocateShipping/LocateShipping.jsx","redux/selectors.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ShippingSearchForm_form__47Cbp\",\"input\":\"ShippingSearchForm_input__xjGb0\",\"button\":\"ShippingSearchForm_button__rahG4\"};","import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectShipping } from \"redux/selectors\";\nimport { fetchShipping } from \"redux/operations\";\nimport { addNewQuery } from \"../../redux/historySlice\";\n\nimport css from './ShippingSearchForm.module.css';\n\nexport const ShippingSearchForm = () => {\n    const [trackingNum, setTrackingNum] = useState(\"\");\n    const { info: { number } } = useSelector(selectShipping);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (!number) {\n            return;\n        }\n        \n        setTrackingNum(number);\n    }, [number])\n\n    const handleInputChange = event => {\n        const { value } = event.currentTarget;\n        setTrackingNum(value);\n    };\n\n    const handleFormSubmit = event => {\n        event.preventDefault();\n        dispatch(fetchShipping(trackingNum));\n        dispatch(addNewQuery(trackingNum));\n    }\n\n    return (\n        <form className={css.form} onSubmit={handleFormSubmit}>\n            <input\n                type=\"text\"\n                name=\"query\"\n                pattern=\"^(5|2)([0-9]{13})$\"\n                required\n                title=\"Номер відправлення має складатися з 14 цифр та починатися з 2 або 5\"\n                placeholder=\"Введіть номер ТТН\"\n                className={css.input}\n                onChange={handleInputChange}\n                value={trackingNum}\n            />\n            <button \n                type=\"submit\"\n                className={css.button}\n            >\n                Перевірити статус\n            </button>\n        </form>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"emptyInfo\":\"ShippingInfo_emptyInfo__ED5p8\",\"info\":\"ShippingInfo_info__8SfdE\",\"status\":\"ShippingInfo_status__Iye4f\",\"details\":\"ShippingInfo_details__fE8ST\",\"error\":\"ShippingInfo_error__8QZtx\"};","import { useSelector } from 'react-redux';\nimport { selectShipping } from 'redux/selectors';\nimport { Loader } from 'components/Loader/Loader';\nimport css from './ShippingInfo.module.css';\n\nexport const ShippingInfo = () => {\n    const { isLoading, error, info: { status, sender, recipient } } = useSelector(selectShipping);\n\n    return (\n        <>\n        \n        { !status && \n            <div className={css.emptyInfo}>\n                { isLoading && <Loader /> }\n                { error &&\n                    <h2 className={css.error}>{error}</h2>\n                }\n            </div> \n        }\n\n        { status && \n            <div className={css.info}>\n                <h2 className={css.status}>Статус доставки: {status}</h2>\n                <p className={css.details}>Відправлено: {sender}</p>\n                <p className={css.details}>Отримано: {recipient}</p>\n            </div>         \n        }\n\n        </>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"history\":\"SearchHistory_history__clEJc\",\"title\":\"SearchHistory_title__xaLsh\",\"list\":\"SearchHistory_list__RS-Ag\",\"item\":\"SearchHistory_item__l+CPk\",\"button\":\"SearchHistory_button__uz-oe\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { selectHistory } from 'redux/selectors';\nimport { fetchShipping } from \"redux/operations\";\nimport { clearHistory } from 'redux/historySlice';\nimport { nanoid } from 'nanoid';\nimport css from './SearchHistory.module.css';\n\nexport const SearchHistory = () => {\n    const history = useSelector(selectHistory);\n    const dispatch = useDispatch();\n\n    const handleItemClick = (event) => {\n        dispatch(fetchShipping(event.target.innerText));\n    }\n\n    const handleClearHistory = () => {\n        console.log('clear');\n        dispatch(clearHistory());\n    }\n\n    return (\n        <div className={css.history}>\n            <h2 className={css.title}>Історія</h2>\n            <ul className={css.list}>\n                { history.length > 0 && \n                    history.map(item => \n                        <li \n                            className={css.item} \n                            key={nanoid()}\n                            onClick={handleItemClick}\n                        >\n                            {item}\n                        </li>)\n                }\n            </ul>\n            <button \n                type='button'\n                className={css.button}\n                onClick={handleClearHistory}\n            >\n                Видалити всі\n            </button>\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"LocateShipping_content__bfsbj\"};","import { ShippingSearchForm } from \"components/ShippingSearchForm/ShippingSearchForm\";\nimport { ShippingInfo } from \"components/ShippingInfo/ShippingInfo\";\nimport { SearchHistory } from \"components/SearchHistory/SearchHistory\";\nimport css from \"./LocateShipping.module.css\";\n\nconst LocateShipping = () => {\n    return (\n        <section>\n            <ShippingSearchForm />\n            <div className={css.content}>\n                <ShippingInfo />\n                <SearchHistory />\n            </div>\n        </section>\n    )\n}\n\nexport default LocateShipping;","export const selectShipping = state => state.shipping;\nexport const selectHistory = state => state.history;\nexport const selectOffices = state => state.offices;","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["ShippingSearchForm","_useState","useState","_useState2","_slicedToArray","trackingNum","setTrackingNum","number","useSelector","selectShipping","info","dispatch","useDispatch","useEffect","_jsxs","className","css","onSubmit","event","preventDefault","fetchShipping","addNewQuery","children","_jsx","type","name","pattern","required","title","placeholder","onChange","value","currentTarget","ShippingInfo","_useSelector","isLoading","error","_useSelector$info","status","sender","recipient","_Fragment","Loader","SearchHistory","history","selectHistory","handleItemClick","target","innerText","length","map","item","onClick","nanoid","console","log","clearHistory","state","shipping","selectOffices","offices","size","arguments","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase"],"sourceRoot":""}